/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A request to update the properties of a record.
 * @export
 * @interface UpdateRecordRequest
 */
export interface UpdateRecordRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateRecordRequest
     */
    completion?: string;
    /**
     * Whether the user upvoted the completion.
     * @type {boolean}
     * @memberof UpdateRecordRequest
     */
    hasUpvote: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateRecordRequest
     */
    id: number;
    /**
     * Whether the completion is accepted by the user.
     * @type {boolean}
     * @memberof UpdateRecordRequest
     */
    isAccepted: boolean;
}

/**
 * Check if a given object implements the UpdateRecordRequest interface.
 */
export function instanceOfUpdateRecordRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hasUpvote" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "isAccepted" in value;

    return isInstance;
}

export function UpdateRecordRequestFromJSON(json: any): UpdateRecordRequest {
    return UpdateRecordRequestFromJSONTyped(json, false);
}

export function UpdateRecordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRecordRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'completion': !exists(json, 'completion') ? undefined : json['completion'],
        'hasUpvote': json['has_upvote'],
        'id': json['id'],
        'isAccepted': json['is_accepted'],
    };
}

export function UpdateRecordRequestToJSON(value?: UpdateRecordRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'completion': value.completion,
        'has_upvote': value.hasUpvote,
        'id': value.id,
        'is_accepted': value.isAccepted,
    };
}

