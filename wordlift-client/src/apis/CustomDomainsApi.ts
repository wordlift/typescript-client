/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DomainValidationRequest,
} from '../models';
import {
    DomainValidationRequestFromJSON,
    DomainValidationRequestToJSON,
} from '../models';

export interface ValidateRequest {
    domainValidationRequest: DomainValidationRequest;
}

/**
 * 
 */
export class CustomDomainsApi extends runtime.BaseAPI {

    /**
     * Check if the provided custom domain can be set for the account
     * Validate
     */
    async validateRaw(requestParameters: ValidateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.domainValidationRequest === null || requestParameters.domainValidationRequest === undefined) {
            throw new runtime.RequiredError('domainValidationRequest','Required parameter requestParameters.domainValidationRequest was null or undefined when calling validate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/validations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DomainValidationRequestToJSON(requestParameters.domainValidationRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Check if the provided custom domain can be set for the account
     * Validate
     */
    async validate(requestParameters: ValidateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.validateRaw(requestParameters, initOverrides);
    }

}
