/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A Word bias.
 * @export
 * @interface Word
 */
export interface Word {
    /**
     * The bias.
     * @type {number}
     * @memberof Word
     */
    bias: number;
    /**
     * The cluster of the word.
     * @type {string}
     * @memberof Word
     */
    cluster: string;
    /**
     * The content generation id.
     * @type {number}
     * @memberof Word
     */
    readonly contentGenerationId: number;
    /**
     * The create date-time.
     * @type {Date}
     * @memberof Word
     */
    readonly createdAt?: Date;
    /**
     * The unique id.
     * @type {number}
     * @memberof Word
     */
    readonly id?: number;
    /**
     * The last modified date-time.
     * @type {Date}
     * @memberof Word
     */
    readonly modifiedAt?: Date;
    /**
     * The token id for the word.
     * @type {string}
     * @memberof Word
     */
    tokenId: string;
    /**
     * The actual word.
     * @type {string}
     * @memberof Word
     */
    word: string;
}

/**
 * Check if a given object implements the Word interface.
 */
export function instanceOfWord(value: object): value is Word {
    if (!('bias' in value) || value['bias'] === undefined) return false;
    if (!('cluster' in value) || value['cluster'] === undefined) return false;
    if (!('contentGenerationId' in value) || value['contentGenerationId'] === undefined) return false;
    if (!('tokenId' in value) || value['tokenId'] === undefined) return false;
    if (!('word' in value) || value['word'] === undefined) return false;
    return true;
}

export function WordFromJSON(json: any): Word {
    return WordFromJSONTyped(json, false);
}

export function WordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Word {
    if (json == null) {
        return json;
    }
    return {
        
        'bias': json['bias'],
        'cluster': json['cluster'],
        'contentGenerationId': json['content_generation_id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'id': json['id'] == null ? undefined : json['id'],
        'modifiedAt': json['modified_at'] == null ? undefined : (new Date(json['modified_at'])),
        'tokenId': json['token_id'],
        'word': json['word'],
    };
}

export function WordToJSON(json: any): Word {
    return WordToJSONTyped(json, false);
}

export function WordToJSONTyped(value?: Omit<Word, 'content_generation_id'|'created_at'|'id'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bias': value['bias'],
        'cluster': value['cluster'],
        'token_id': value['tokenId'],
        'word': value['word'],
    };
}

