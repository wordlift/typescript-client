/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuleRequest } from './RuleRequest';
import {
    RuleRequestFromJSON,
    RuleRequestFromJSONTyped,
    RuleRequestToJSON,
} from './RuleRequest';
import type { WebpageProperties } from './WebpageProperties';
import {
    WebpagePropertiesFromJSON,
    WebpagePropertiesFromJSONTyped,
    WebpagePropertiesToJSON,
} from './WebpageProperties';

/**
 * 
 * @export
 * @interface SmartContentRequest
 */
export interface SmartContentRequest {
    /**
     * The account id.
     * @type {number}
     * @memberof SmartContentRequest
     */
    accountId: number;
    /**
     * The model id.
     * @type {number}
     * @memberof SmartContentRequest
     */
    modelId?: number;
    /**
     * 
     * @type {Array<RuleRequest>}
     * @memberof SmartContentRequest
     */
    rules?: Array<RuleRequest>;
    /**
     * 
     * @type {Array<WebpageProperties>}
     * @memberof SmartContentRequest
     */
    webpageProperties?: Array<WebpageProperties>;
}

/**
 * Check if a given object implements the SmartContentRequest interface.
 */
export function instanceOfSmartContentRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;

    return isInstance;
}

export function SmartContentRequestFromJSON(json: any): SmartContentRequest {
    return SmartContentRequestFromJSONTyped(json, false);
}

export function SmartContentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmartContentRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': json['account_id'],
        'modelId': !exists(json, 'model_id') ? undefined : json['model_id'],
        'rules': !exists(json, 'rules') ? undefined : ((json['rules'] as Array<any>).map(RuleRequestFromJSON)),
        'webpageProperties': !exists(json, 'webpage_properties') ? undefined : ((json['webpage_properties'] as Array<any>).map(WebpagePropertiesFromJSON)),
    };
}

export function SmartContentRequestToJSON(value?: SmartContentRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_id': value.accountId,
        'model_id': value.modelId,
        'rules': value.rules === undefined ? undefined : ((value.rules as Array<any>).map(RuleRequestToJSON)),
        'webpage_properties': value.webpageProperties === undefined ? undefined : ((value.webpageProperties as Array<any>).map(WebpagePropertiesToJSON)),
    };
}

