/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A request to update the properties of a record.
 * @export
 * @interface UpdateRecordRequest
 */
export interface UpdateRecordRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateRecordRequest
     */
    completion?: string;
    /**
     * Whether the user upvoted the completion.
     * @type {boolean}
     * @memberof UpdateRecordRequest
     */
    hasUpvote: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateRecordRequest
     */
    id: number;
    /**
     * Whether the completion is accepted by the user.
     * @type {boolean}
     * @memberof UpdateRecordRequest
     */
    isAccepted: boolean;
}

/**
 * Check if a given object implements the UpdateRecordRequest interface.
 */
export function instanceOfUpdateRecordRequest(value: object): value is UpdateRecordRequest {
    if (!('hasUpvote' in value) || value['hasUpvote'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isAccepted' in value) || value['isAccepted'] === undefined) return false;
    return true;
}

export function UpdateRecordRequestFromJSON(json: any): UpdateRecordRequest {
    return UpdateRecordRequestFromJSONTyped(json, false);
}

export function UpdateRecordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRecordRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'completion': json['completion'] == null ? undefined : json['completion'],
        'hasUpvote': json['has_upvote'],
        'id': json['id'],
        'isAccepted': json['is_accepted'],
    };
}

export function UpdateRecordRequestToJSON(json: any): UpdateRecordRequest {
    return UpdateRecordRequestToJSONTyped(json, false);
}

export function UpdateRecordRequestToJSONTyped(value?: UpdateRecordRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'completion': value['completion'],
        'has_upvote': value['hasUpvote'],
        'id': value['id'],
        'is_accepted': value['isAccepted'],
    };
}

