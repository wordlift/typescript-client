/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Filter } from './Filter';
import {
    FilterFromJSON,
    FilterFromJSONTyped,
    FilterToJSON,
} from './Filter';

/**
 * The Botify Crawl Import request
 * @export
 * @interface BotifyCrawlImportRequest
 */
export interface BotifyCrawlImportRequest {
    /**
     * 
     * @type {string}
     * @memberof BotifyCrawlImportRequest
     */
    collection?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BotifyCrawlImportRequest
     */
    description?: Array<string>;
    /**
     * 
     * @type {Array<Filter>}
     * @memberof BotifyCrawlImportRequest
     */
    filters?: Array<Filter>;
    /**
     * 
     * @type {string}
     * @memberof BotifyCrawlImportRequest
     */
    headline?: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof BotifyCrawlImportRequest
     */
    requestEmbeddings?: Set<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BotifyCrawlImportRequest
     */
    text?: Array<string>;
    /**
     * 
     * @type {Set<string>}
     * @memberof BotifyCrawlImportRequest
     */
    types?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof BotifyCrawlImportRequest
     */
    url?: string;
}

/**
 * Check if a given object implements the BotifyCrawlImportRequest interface.
 */
export function instanceOfBotifyCrawlImportRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BotifyCrawlImportRequestFromJSON(json: any): BotifyCrawlImportRequest {
    return BotifyCrawlImportRequestFromJSONTyped(json, false);
}

export function BotifyCrawlImportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BotifyCrawlImportRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collection': !exists(json, 'collection') ? undefined : json['collection'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'filters': !exists(json, 'filters') ? undefined : ((json['filters'] as Array<any>).map(FilterFromJSON)),
        'headline': !exists(json, 'headline') ? undefined : json['headline'],
        'requestEmbeddings': !exists(json, 'request_embeddings') ? undefined : json['request_embeddings'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'types': !exists(json, 'types') ? undefined : json['types'],
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function BotifyCrawlImportRequestToJSON(value?: BotifyCrawlImportRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collection': value.collection,
        'description': value.description,
        'filters': value.filters === undefined ? undefined : ((value.filters as Array<any>).map(FilterToJSON)),
        'headline': value.headline,
        'request_embeddings': value.requestEmbeddings === undefined ? undefined : Array.from(value.requestEmbeddings as Set<any>),
        'text': value.text,
        'types': value.types === undefined ? undefined : Array.from(value.types as Set<any>),
        'url': value.url,
    };
}

