/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The Content Expansion request.
 * @export
 * @interface ContentExpansionRequest
 */
export interface ContentExpansionRequest {
    /**
     * The target URL.
     * @type {string}
     * @memberof ContentExpansionRequest
     */
    url: string;
    /**
     * A list of entity labels.
     * @type {Set<string>}
     * @memberof ContentExpansionRequest
     */
    entities: Set<string>;
    /**
     * The OpenAI key.
     * @type {string}
     * @memberof ContentExpansionRequest
     */
    openaiKey: string;
}

/**
 * Check if a given object implements the ContentExpansionRequest interface.
 */
export function instanceOfContentExpansionRequest(value: object): value is ContentExpansionRequest {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('entities' in value) || value['entities'] === undefined) return false;
    if (!('openaiKey' in value) || value['openaiKey'] === undefined) return false;
    return true;
}

export function ContentExpansionRequestFromJSON(json: any): ContentExpansionRequest {
    return ContentExpansionRequestFromJSONTyped(json, false);
}

export function ContentExpansionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentExpansionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'entities': new Set(json['entities']),
        'openaiKey': json['openai_key'],
    };
}

export function ContentExpansionRequestToJSON(json: any): ContentExpansionRequest {
    return ContentExpansionRequestToJSONTyped(json, false);
}

export function ContentExpansionRequestToJSONTyped(value?: ContentExpansionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'entities': Array.from(value['entities'] as Set<any>),
        'openai_key': value['openaiKey'],
    };
}

