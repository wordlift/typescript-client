/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VectorSearchQueryRequest } from './VectorSearchQueryRequest';
import {
    VectorSearchQueryRequestFromJSON,
    VectorSearchQueryRequestFromJSONTyped,
    VectorSearchQueryRequestToJSON,
} from './VectorSearchQueryRequest';

/**
 * An Internal Link request item.
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * The entity id, reused in the output template.
     * @type {string}
     * @memberof Item
     */
    id?: string;
    /**
     * 
     * @type {VectorSearchQueryRequest}
     * @memberof Item
     */
    query: VectorSearchQueryRequest;
    /**
     * The webpage name, reused in the output template.
     * @type {string}
     * @memberof Item
     */
    sourceName?: string;
}

/**
 * Check if a given object implements the Item interface.
 */
export function instanceOfItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "query" in value;

    return isInstance;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'query': VectorSearchQueryRequestFromJSON(json['query']),
        'sourceName': !exists(json, 'source_name') ? undefined : json['source_name'],
    };
}

export function ItemToJSON(value?: Item | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'query': VectorSearchQueryRequestToJSON(value.query),
        'source_name': value.sourceName,
    };
}

