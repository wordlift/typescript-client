/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PageVectorSearchQuestionResponseItem,
  VectorSearchQuestionRequest,
} from '../models/index';
import {
    PageVectorSearchQuestionResponseItemFromJSON,
    PageVectorSearchQuestionResponseItemToJSON,
    VectorSearchQuestionRequestFromJSON,
    VectorSearchQuestionRequestToJSON,
} from '../models/index';

export interface CreateVectorSearchQuestionRequest {
    vectorSearchQuestionRequest: VectorSearchQuestionRequest;
}

/**
 * 
 */
export class VectorSearchQuestionsApi extends runtime.BaseAPI {

    /**
     * Create
     */
    async createVectorSearchQuestionRaw(requestParameters: CreateVectorSearchQuestionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageVectorSearchQuestionResponseItem>> {
        if (requestParameters['vectorSearchQuestionRequest'] == null) {
            throw new runtime.RequiredError(
                'vectorSearchQuestionRequest',
                'Required parameter "vectorSearchQuestionRequest" was null or undefined when calling createVectorSearchQuestion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/vector-search/questions-collection`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: VectorSearchQuestionRequestToJSON(requestParameters['vectorSearchQuestionRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PageVectorSearchQuestionResponseItemFromJSON(jsonValue));
    }

    /**
     * Create
     */
    async createVectorSearchQuestion(requestParameters: CreateVectorSearchQuestionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageVectorSearchQuestionResponseItem> {
        const response = await this.createVectorSearchQuestionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
