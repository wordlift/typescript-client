/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A request for a completion.
 * @export
 * @interface CompletionRequest
 */
export interface CompletionRequest {
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    frequencyPenalty?: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof CompletionRequest
     */
    logitBias?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    maxTokens?: number;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    minWords?: number;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    modelId?: number;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    presencePenalty?: number;
    /**
     * 
     * @type {string}
     * @memberof CompletionRequest
     */
    prompt: string;
    /**
     * 
     * @type {string}
     * @memberof CompletionRequest
     */
    stop?: string;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    temperature?: number;
}

/**
 * Check if a given object implements the CompletionRequest interface.
 */
export function instanceOfCompletionRequest(value: object): value is CompletionRequest {
    if (!('prompt' in value) || value['prompt'] === undefined) return false;
    return true;
}

export function CompletionRequestFromJSON(json: any): CompletionRequest {
    return CompletionRequestFromJSONTyped(json, false);
}

export function CompletionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompletionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'frequencyPenalty': json['frequency_penalty'] == null ? undefined : json['frequency_penalty'],
        'logitBias': json['logit_bias'] == null ? undefined : json['logit_bias'],
        'maxTokens': json['max_tokens'] == null ? undefined : json['max_tokens'],
        'minWords': json['min_words'] == null ? undefined : json['min_words'],
        'modelId': json['model_id'] == null ? undefined : json['model_id'],
        'presencePenalty': json['presence_penalty'] == null ? undefined : json['presence_penalty'],
        'prompt': json['prompt'],
        'stop': json['stop'] == null ? undefined : json['stop'],
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
    };
}

export function CompletionRequestToJSON(json: any): CompletionRequest {
    return CompletionRequestToJSONTyped(json, false);
}

export function CompletionRequestToJSONTyped(value?: CompletionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'frequency_penalty': value['frequencyPenalty'],
        'logit_bias': value['logitBias'],
        'max_tokens': value['maxTokens'],
        'min_words': value['minWords'],
        'model_id': value['modelId'],
        'presence_penalty': value['presencePenalty'],
        'prompt': value['prompt'],
        'stop': value['stop'],
        'temperature': value['temperature'],
    };
}

