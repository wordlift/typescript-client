/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Request3
 */
export interface Request3 {
    /**
     * 
     * @type {string}
     * @memberof Request3
     */
    completion?: string;
    /**
     * This indicates whether the user upvoted the completion.
     * @type {boolean}
     * @memberof Request3
     */
    hasUpvote: boolean;
    /**
     * This indicates whether the completion is accepted by the user.
     * @type {boolean}
     * @memberof Request3
     */
    isAccepted: boolean;
    /**
     * Validation time of the record - null to revalidate.
     * @type {Date}
     * @memberof Request3
     */
    validatedAt?: Date;
}

/**
 * Check if a given object implements the Request3 interface.
 */
export function instanceOfRequest3(value: object): value is Request3 {
    if (!('hasUpvote' in value) || value['hasUpvote'] === undefined) return false;
    if (!('isAccepted' in value) || value['isAccepted'] === undefined) return false;
    return true;
}

export function Request3FromJSON(json: any): Request3 {
    return Request3FromJSONTyped(json, false);
}

export function Request3FromJSONTyped(json: any, ignoreDiscriminator: boolean): Request3 {
    if (json == null) {
        return json;
    }
    return {
        
        'completion': json['completion'] == null ? undefined : json['completion'],
        'hasUpvote': json['has_upvote'],
        'isAccepted': json['is_accepted'],
        'validatedAt': json['validated_at'] == null ? undefined : (new Date(json['validated_at'])),
    };
}

export function Request3ToJSON(json: any): Request3 {
    return Request3ToJSONTyped(json, false);
}

export function Request3ToJSONTyped(value?: Request3 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'completion': value['completion'],
        'has_upvote': value['hasUpvote'],
        'is_accepted': value['isAccepted'],
        'validated_at': value['validatedAt'] == null ? undefined : ((value['validatedAt']).toISOString()),
    };
}

