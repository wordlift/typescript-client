/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A request for a completion.
 * @export
 * @interface CompletionRequest
 */
export interface CompletionRequest {
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    frequencyPenalty?: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof CompletionRequest
     */
    logitBias?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    maxTokens?: number;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    minWords?: number;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    modelId?: number;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    presencePenalty?: number;
    /**
     * 
     * @type {string}
     * @memberof CompletionRequest
     */
    prompt: string;
    /**
     * 
     * @type {string}
     * @memberof CompletionRequest
     */
    stop?: string;
    /**
     * 
     * @type {number}
     * @memberof CompletionRequest
     */
    temperature?: number;
}

/**
 * Check if a given object implements the CompletionRequest interface.
 */
export function instanceOfCompletionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "prompt" in value;

    return isInstance;
}

export function CompletionRequestFromJSON(json: any): CompletionRequest {
    return CompletionRequestFromJSONTyped(json, false);
}

export function CompletionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompletionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'frequencyPenalty': !exists(json, 'frequency_penalty') ? undefined : json['frequency_penalty'],
        'logitBias': !exists(json, 'logit_bias') ? undefined : json['logit_bias'],
        'maxTokens': !exists(json, 'max_tokens') ? undefined : json['max_tokens'],
        'minWords': !exists(json, 'min_words') ? undefined : json['min_words'],
        'modelId': !exists(json, 'model_id') ? undefined : json['model_id'],
        'presencePenalty': !exists(json, 'presence_penalty') ? undefined : json['presence_penalty'],
        'prompt': json['prompt'],
        'stop': !exists(json, 'stop') ? undefined : json['stop'],
        'temperature': !exists(json, 'temperature') ? undefined : json['temperature'],
    };
}

export function CompletionRequestToJSON(value?: CompletionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'frequency_penalty': value.frequencyPenalty,
        'logit_bias': value.logitBias,
        'max_tokens': value.maxTokens,
        'min_words': value.minWords,
        'model_id': value.modelId,
        'presence_penalty': value.presencePenalty,
        'prompt': value.prompt,
        'stop': value.stop,
        'temperature': value.temperature,
    };
}

