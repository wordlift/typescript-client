/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A Smart Content project.
 * @export
 * @interface SmartContent
 */
export interface SmartContent {
    /**
     * The account id.
     * @type {number}
     * @memberof SmartContent
     */
    readonly accountId: number;
    /**
     * The create date-time.
     * @type {Date}
     * @memberof SmartContent
     */
    readonly createdAt?: Date;
    /**
     * The unique id.
     * @type {number}
     * @memberof SmartContent
     */
    readonly id?: number;
    /**
     * The model id.
     * @type {number}
     * @memberof SmartContent
     */
    modelId?: number;
}

/**
 * Check if a given object implements the SmartContent interface.
 */
export function instanceOfSmartContent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;

    return isInstance;
}

export function SmartContentFromJSON(json: any): SmartContent {
    return SmartContentFromJSONTyped(json, false);
}

export function SmartContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmartContent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': json['account_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'modelId': !exists(json, 'model_id') ? undefined : json['model_id'],
    };
}

export function SmartContentToJSON(value?: SmartContent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'model_id': value.modelId,
    };
}

