/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VectorSearchQueryResponseItemFieldsValueInner } from './VectorSearchQueryResponseItemFieldsValueInner';
import {
    VectorSearchQueryResponseItemFieldsValueInnerFromJSON,
    VectorSearchQueryResponseItemFieldsValueInnerFromJSONTyped,
    VectorSearchQueryResponseItemFieldsValueInnerToJSON,
    VectorSearchQueryResponseItemFieldsValueInnerToJSONTyped,
} from './VectorSearchQueryResponseItemFieldsValueInner';
import type { VectorSearchQueryResponseItemMetadataValue } from './VectorSearchQueryResponseItemMetadataValue';
import {
    VectorSearchQueryResponseItemMetadataValueFromJSON,
    VectorSearchQueryResponseItemMetadataValueFromJSONTyped,
    VectorSearchQueryResponseItemMetadataValueToJSON,
    VectorSearchQueryResponseItemMetadataValueToJSONTyped,
} from './VectorSearchQueryResponseItemMetadataValue';

/**
 * An array of objects.
 * @export
 * @interface VectorSearchQueryResponseItem
 */
export interface VectorSearchQueryResponseItem {
    /**
     * Map of extra retrieved fields. The values of the requested fields are always returned in an array.If no value is found an empty array is returned.
     * @type {{ [key: string]: Array<VectorSearchQueryResponseItemFieldsValueInner>; }}
     * @memberof VectorSearchQueryResponseItem
     */
    fields?: { [key: string]: Array<VectorSearchQueryResponseItemFieldsValueInner>; };
    /**
     * 
     * @type {string}
     * @memberof VectorSearchQueryResponseItem
     */
    id?: string;
    /**
     * The IRI of the entity that this node belongs to.
     * @type {string}
     * @memberof VectorSearchQueryResponseItem
     * @deprecated
     */
    iri: string;
    /**
     * A nodes extra metadata.
     * @type {{ [key: string]: VectorSearchQueryResponseItemMetadataValue; }}
     * @memberof VectorSearchQueryResponseItem
     */
    metadata?: { [key: string]: VectorSearchQueryResponseItemMetadataValue; };
    /**
     * A nodes id.
     * @type {string}
     * @memberof VectorSearchQueryResponseItem
     */
    nodeId?: string;
    /**
     * The similarity score between the node and the query embeddings.
     * @type {number}
     * @memberof VectorSearchQueryResponseItem
     */
    score: number;
    /**
     * The text of a node from which the embeddings were generated.
     * @type {string}
     * @memberof VectorSearchQueryResponseItem
     */
    text?: string;
}

/**
 * Check if a given object implements the VectorSearchQueryResponseItem interface.
 */
export function instanceOfVectorSearchQueryResponseItem(value: object): value is VectorSearchQueryResponseItem {
    if (!('iri' in value) || value['iri'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    return true;
}

export function VectorSearchQueryResponseItemFromJSON(json: any): VectorSearchQueryResponseItem {
    return VectorSearchQueryResponseItemFromJSONTyped(json, false);
}

export function VectorSearchQueryResponseItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): VectorSearchQueryResponseItem {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'] == null ? undefined : json['fields'],
        'id': json['id'] == null ? undefined : json['id'],
        'iri': json['iri'],
        'metadata': json['metadata'] == null ? undefined : (mapValues(json['metadata'], VectorSearchQueryResponseItemMetadataValueFromJSON)),
        'nodeId': json['node_id'] == null ? undefined : json['node_id'],
        'score': json['score'],
        'text': json['text'] == null ? undefined : json['text'],
    };
}

export function VectorSearchQueryResponseItemToJSON(json: any): VectorSearchQueryResponseItem {
    return VectorSearchQueryResponseItemToJSONTyped(json, false);
}

export function VectorSearchQueryResponseItemToJSONTyped(value?: VectorSearchQueryResponseItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'],
        'id': value['id'],
        'iri': value['iri'],
        'metadata': value['metadata'] == null ? undefined : (mapValues(value['metadata'], VectorSearchQueryResponseItemMetadataValueToJSON)),
        'node_id': value['nodeId'],
        'score': value['score'],
        'text': value['text'],
    };
}

