/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Item } from './Item';
import {
    ItemFromJSON,
    ItemFromJSONTyped,
    ItemToJSON,
    ItemToJSONTyped,
} from './Item';
import type { AnchorText } from './AnchorText';
import {
    AnchorTextFromJSON,
    AnchorTextFromJSONTyped,
    AnchorTextToJSON,
    AnchorTextToJSONTyped,
} from './AnchorText';

/**
 * An Internal Links request.
 * @export
 * @interface InternalLinkRequest
 */
export interface InternalLinkRequest {
    /**
     * 
     * @type {AnchorText}
     * @memberof InternalLinkRequest
     */
    anchorText?: AnchorText;
    /**
     * An array of items.
     * @type {Array<Item>}
     * @memberof InternalLinkRequest
     */
    items: Array<Item>;
    /**
     * The output template, not required, we provide a default JSON-LD template
     * @type {string}
     * @memberof InternalLinkRequest
     */
    template?: string;
}

/**
 * Check if a given object implements the InternalLinkRequest interface.
 */
export function instanceOfInternalLinkRequest(value: object): value is InternalLinkRequest {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function InternalLinkRequestFromJSON(json: any): InternalLinkRequest {
    return InternalLinkRequestFromJSONTyped(json, false);
}

export function InternalLinkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalLinkRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'anchorText': json['anchor_text'] == null ? undefined : AnchorTextFromJSON(json['anchor_text']),
        'items': ((json['items'] as Array<any>).map(ItemFromJSON)),
        'template': json['template'] == null ? undefined : json['template'],
    };
}

export function InternalLinkRequestToJSON(json: any): InternalLinkRequest {
    return InternalLinkRequestToJSONTyped(json, false);
}

export function InternalLinkRequestToJSONTyped(value?: InternalLinkRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'anchor_text': AnchorTextToJSON(value['anchorText']),
        'items': ((value['items'] as Array<any>).map(ItemToJSON)),
        'template': value['template'],
    };
}

