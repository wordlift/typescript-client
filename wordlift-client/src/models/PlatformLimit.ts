/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformLimit
 */
export interface PlatformLimit {
    /**
     * 
     * @type {string}
     * @memberof PlatformLimit
     */
    appliesTo: string;
    /**
     * 
     * @type {string}
     * @memberof PlatformLimit
     */
    basedOn: PlatformLimitBasedOnEnum;
    /**
     * 
     * @type {string}
     * @memberof PlatformLimit
     */
    basedOnValue: string;
    /**
     * The create date-time.
     * @type {Date}
     * @memberof PlatformLimit
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PlatformLimit
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof PlatformLimit
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof PlatformLimit
     */
    limits: number;
    /**
     * The last modified date-time.
     * @type {Date}
     * @memberof PlatformLimit
     */
    readonly modifiedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PlatformLimit
     */
    scope: PlatformLimitScopeEnum;
}


/**
 * @export
 */
export const PlatformLimitBasedOnEnum = {
    Sku: 'SKU'
} as const;
export type PlatformLimitBasedOnEnum = typeof PlatformLimitBasedOnEnum[keyof typeof PlatformLimitBasedOnEnum];

/**
 * @export
 */
export const PlatformLimitScopeEnum = {
    Account: 'ACCOUNT',
    Subscription: 'SUBSCRIPTION'
} as const;
export type PlatformLimitScopeEnum = typeof PlatformLimitScopeEnum[keyof typeof PlatformLimitScopeEnum];


/**
 * Check if a given object implements the PlatformLimit interface.
 */
export function instanceOfPlatformLimit(value: object): value is PlatformLimit {
    if (!('appliesTo' in value) || value['appliesTo'] === undefined) return false;
    if (!('basedOn' in value) || value['basedOn'] === undefined) return false;
    if (!('basedOnValue' in value) || value['basedOnValue'] === undefined) return false;
    if (!('limits' in value) || value['limits'] === undefined) return false;
    if (!('scope' in value) || value['scope'] === undefined) return false;
    return true;
}

export function PlatformLimitFromJSON(json: any): PlatformLimit {
    return PlatformLimitFromJSONTyped(json, false);
}

export function PlatformLimitFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformLimit {
    if (json == null) {
        return json;
    }
    return {
        
        'appliesTo': json['applies_to'],
        'basedOn': json['based_on'],
        'basedOnValue': json['based_on_value'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'description': json['description'] == null ? undefined : json['description'],
        'id': json['id'] == null ? undefined : json['id'],
        'limits': json['limits'],
        'modifiedAt': json['modified_at'] == null ? undefined : (new Date(json['modified_at'])),
        'scope': json['scope'],
    };
}

export function PlatformLimitToJSON(json: any): PlatformLimit {
    return PlatformLimitToJSONTyped(json, false);
}

export function PlatformLimitToJSONTyped(value?: Omit<PlatformLimit, 'created_at'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'applies_to': value['appliesTo'],
        'based_on': value['basedOn'],
        'based_on_value': value['basedOnValue'],
        'description': value['description'],
        'id': value['id'],
        'limits': value['limits'],
        'scope': value['scope'],
    };
}

