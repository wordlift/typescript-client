/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebPage
 */
export interface WebPage {
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    _abstract?: string;
    /**
     * 
     * @type {Date}
     * @memberof WebPage
     */
    datePublished?: Date;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    headline?: string;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    markdown?: string;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    text?: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof WebPage
     */
    types?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    url?: string;
}

/**
 * Check if a given object implements the WebPage interface.
 */
export function instanceOfWebPage(value: object): value is WebPage {
    return true;
}

export function WebPageFromJSON(json: any): WebPage {
    return WebPageFromJSONTyped(json, false);
}

export function WebPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebPage {
    if (json == null) {
        return json;
    }
    return {
        
        '_abstract': json['abstract'] == null ? undefined : json['abstract'],
        'datePublished': json['date_published'] == null ? undefined : (new Date(json['date_published'])),
        'headline': json['headline'] == null ? undefined : json['headline'],
        'image': json['image'] == null ? undefined : json['image'],
        'markdown': json['markdown'] == null ? undefined : json['markdown'],
        'text': json['text'] == null ? undefined : json['text'],
        'types': json['types'] == null ? undefined : new Set(json['types']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WebPageToJSON(json: any): WebPage {
    return WebPageToJSONTyped(json, false);
}

export function WebPageToJSONTyped(value?: WebPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'abstract': value['_abstract'],
        'date_published': value['datePublished'] == null ? undefined : ((value['datePublished']).toISOString().substring(0,10)),
        'headline': value['headline'],
        'image': value['image'],
        'markdown': value['markdown'],
        'text': value['text'],
        'types': value['types'] == null ? undefined : Array.from(value['types'] as Set<any>),
        'url': value['url'],
    };
}

