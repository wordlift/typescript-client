/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LevelEnum } from './LevelEnum';
import {
    LevelEnumFromJSON,
    LevelEnumFromJSONTyped,
    LevelEnumToJSON,
    LevelEnumToJSONTyped,
} from './LevelEnum';

/**
 * The set of warnings found for the answer.
 * @export
 * @interface ValidationResult
 */
export interface ValidationResult {
    /**
     * 
     * @type {LevelEnum}
     * @memberof ValidationResult
     */
    levelEnum?: LevelEnum;
    /**
     * 
     * @type {string}
     * @memberof ValidationResult
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationResult
     */
    result?: ValidationResultResultEnum;
}


/**
 * @export
 */
export const ValidationResultResultEnum = {
    Pass: 'PASS',
    Fail: 'FAIL',
    Skip: 'SKIP',
    Fixed: 'FIXED'
} as const;
export type ValidationResultResultEnum = typeof ValidationResultResultEnum[keyof typeof ValidationResultResultEnum];


/**
 * Check if a given object implements the ValidationResult interface.
 */
export function instanceOfValidationResult(value: object): value is ValidationResult {
    return true;
}

export function ValidationResultFromJSON(json: any): ValidationResult {
    return ValidationResultFromJSONTyped(json, false);
}

export function ValidationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationResult {
    if (json == null) {
        return json;
    }
    return {
        
        'levelEnum': json['levelEnum'] == null ? undefined : LevelEnumFromJSON(json['levelEnum']),
        'name': json['name'] == null ? undefined : json['name'],
        'result': json['result'] == null ? undefined : json['result'],
    };
}

export function ValidationResultToJSON(json: any): ValidationResult {
    return ValidationResultToJSONTyped(json, false);
}

export function ValidationResultToJSONTyped(value?: ValidationResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'levelEnum': LevelEnumToJSON(value['levelEnum']),
        'name': value['name'],
        'result': value['result'],
    };
}

