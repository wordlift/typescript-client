/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetworkAccountInfo } from './NetworkAccountInfo';
import {
    NetworkAccountInfoFromJSON,
    NetworkAccountInfoFromJSONTyped,
    NetworkAccountInfoToJSON,
} from './NetworkAccountInfo';

/**
 * Account Information
 * @export
 * @interface AccountInfo
 */
export interface AccountInfo {
    /**
     * The Account Id
     * @type {number}
     * @memberof AccountInfo
     */
    readonly accountId: number;
    /**
     * The Dataset Id
     * @type {string}
     * @memberof AccountInfo
     */
    readonly datasetId?: string;
    /**
     * The dataset URI
     * @type {string}
     * @memberof AccountInfo
     */
    readonly datasetUri: string;
    /**
     * A list of features enabled or disabled for the account
     * @type {{ [key: string]: boolean; }}
     * @memberof AccountInfo
     */
    readonly features?: { [key: string]: boolean; };
    /**
     * Google Search Console Site URL
     * @type {string}
     * @memberof AccountInfo
     */
    readonly googleSearchConsoleSiteUrl?: string;
    /**
     * The default setting for include/exclude URLs.
     * @type {string}
     * @memberof AccountInfo
     */
    readonly includeExcludeDefault?: string;
    /**
     * The Key
     * @type {string}
     * @memberof AccountInfo
     */
    readonly key?: string;
    /**
     * The language code
     * @type {string}
     * @memberof AccountInfo
     */
    readonly language?: string;
    /**
     * A list of connected Account Information
     * @type {Array<NetworkAccountInfo>}
     * @memberof AccountInfo
     */
    readonly networks: Array<NetworkAccountInfo>;
    /**
     * 
     * @type {string}
     * @memberof AccountInfo
     */
    ngDatasetId?: string;
    /**
     * The Subscription Id
     * @type {number}
     * @memberof AccountInfo
     */
    readonly subscriptionId: number;
    /**
     * The website URL
     * @type {string}
     * @memberof AccountInfo
     */
    readonly url?: string;
    /**
     * If WordPress, the WP-ADMIN URL
     * @type {string}
     * @memberof AccountInfo
     */
    readonly wpAdmin?: string;
    /**
     * If WordPress, the WP-JSON end-point
     * @type {string}
     * @memberof AccountInfo
     */
    readonly wpJson?: string;
}

/**
 * Check if a given object implements the AccountInfo interface.
 */
export function instanceOfAccountInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "datasetUri" in value;
    isInstance = isInstance && "networks" in value;
    isInstance = isInstance && "subscriptionId" in value;

    return isInstance;
}

export function AccountInfoFromJSON(json: any): AccountInfo {
    return AccountInfoFromJSONTyped(json, false);
}

export function AccountInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': json['accountId'],
        'datasetId': !exists(json, 'datasetId') ? undefined : json['datasetId'],
        'datasetUri': json['datasetUri'],
        'features': !exists(json, 'features') ? undefined : json['features'],
        'googleSearchConsoleSiteUrl': !exists(json, 'googleSearchConsoleSiteUrl') ? undefined : json['googleSearchConsoleSiteUrl'],
        'includeExcludeDefault': !exists(json, 'includeExcludeDefault') ? undefined : json['includeExcludeDefault'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'language': !exists(json, 'language') ? undefined : json['language'],
        'networks': ((json['networks'] as Array<any>).map(NetworkAccountInfoFromJSON)),
        'ngDatasetId': !exists(json, 'ngDatasetId') ? undefined : json['ngDatasetId'],
        'subscriptionId': json['subscriptionId'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'wpAdmin': !exists(json, 'wpAdmin') ? undefined : json['wpAdmin'],
        'wpJson': !exists(json, 'wpJson') ? undefined : json['wpJson'],
    };
}

export function AccountInfoToJSON(value?: AccountInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ngDatasetId': value.ngDatasetId,
    };
}

