/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IncludeExcludeRequest
 */
export interface IncludeExcludeRequest {
    /**
     * A flag which determines whether the URL is `INCLUDE` or `EXCLUDE`.
     * @type {string}
     * @memberof IncludeExcludeRequest
     */
    flag: IncludeExcludeRequestFlagEnum;
    /**
     * The URL
     * @type {string}
     * @memberof IncludeExcludeRequest
     */
    url: string;
}


/**
 * @export
 */
export const IncludeExcludeRequestFlagEnum = {
    Include: 'INCLUDE',
    Exclude: 'EXCLUDE'
} as const;
export type IncludeExcludeRequestFlagEnum = typeof IncludeExcludeRequestFlagEnum[keyof typeof IncludeExcludeRequestFlagEnum];


/**
 * Check if a given object implements the IncludeExcludeRequest interface.
 */
export function instanceOfIncludeExcludeRequest(value: object): value is IncludeExcludeRequest {
    if (!('flag' in value) || value['flag'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function IncludeExcludeRequestFromJSON(json: any): IncludeExcludeRequest {
    return IncludeExcludeRequestFromJSONTyped(json, false);
}

export function IncludeExcludeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncludeExcludeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'flag': json['flag'],
        'url': json['url'],
    };
}

export function IncludeExcludeRequestToJSON(json: any): IncludeExcludeRequest {
    return IncludeExcludeRequestToJSONTyped(json, false);
}

export function IncludeExcludeRequestToJSONTyped(value?: IncludeExcludeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'flag': value['flag'],
        'url': value['url'],
    };
}

