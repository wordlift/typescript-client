/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface MicrodataToJsonLdRequest {
    u: string;
}

/**
 * 
 */
export class MicrodataApi extends runtime.BaseAPI {

    /**
     * Provided a URL, converts any microdata found on that URL to JSON-LD.
     * Microdata to JSON-LD
     */
    async microdataToJsonLdRaw(requestParameters: MicrodataToJsonLdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: object; }>> {
        if (requestParameters.u === null || requestParameters.u === undefined) {
            throw new runtime.RequiredError('u','Required parameter requestParameters.u was null or undefined when calling microdataToJsonLd.');
        }

        const queryParameters: any = {};

        if (requestParameters.u !== undefined) {
            queryParameters['u'] = requestParameters.u;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/microdata-to-jsonld`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Provided a URL, converts any microdata found on that URL to JSON-LD.
     * Microdata to JSON-LD
     */
    async microdataToJsonLd(requestParameters: MicrodataToJsonLdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: object; }> {
        const response = await this.microdataToJsonLdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
