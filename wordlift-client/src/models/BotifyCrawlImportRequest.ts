/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Filter } from './Filter';
import {
    FilterFromJSON,
    FilterFromJSONTyped,
    FilterToJSON,
    FilterToJSONTyped,
} from './Filter';

/**
 * The Botify Crawl Import request
 * @export
 * @interface BotifyCrawlImportRequest
 */
export interface BotifyCrawlImportRequest {
    /**
     * 
     * @type {string}
     * @memberof BotifyCrawlImportRequest
     */
    collection?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BotifyCrawlImportRequest
     */
    description?: Array<string>;
    /**
     * 
     * @type {Array<Filter>}
     * @memberof BotifyCrawlImportRequest
     */
    filters?: Array<Filter>;
    /**
     * 
     * @type {string}
     * @memberof BotifyCrawlImportRequest
     */
    headline?: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof BotifyCrawlImportRequest
     */
    requestEmbeddings?: Set<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof BotifyCrawlImportRequest
     */
    text?: Array<string>;
    /**
     * 
     * @type {Set<string>}
     * @memberof BotifyCrawlImportRequest
     */
    types?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof BotifyCrawlImportRequest
     */
    url?: string;
}

/**
 * Check if a given object implements the BotifyCrawlImportRequest interface.
 */
export function instanceOfBotifyCrawlImportRequest(value: object): value is BotifyCrawlImportRequest {
    return true;
}

export function BotifyCrawlImportRequestFromJSON(json: any): BotifyCrawlImportRequest {
    return BotifyCrawlImportRequestFromJSONTyped(json, false);
}

export function BotifyCrawlImportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BotifyCrawlImportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'collection': json['collection'] == null ? undefined : json['collection'],
        'description': json['description'] == null ? undefined : json['description'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(FilterFromJSON)),
        'headline': json['headline'] == null ? undefined : json['headline'],
        'requestEmbeddings': json['request_embeddings'] == null ? undefined : new Set(json['request_embeddings']),
        'text': json['text'] == null ? undefined : json['text'],
        'types': json['types'] == null ? undefined : new Set(json['types']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function BotifyCrawlImportRequestToJSON(json: any): BotifyCrawlImportRequest {
    return BotifyCrawlImportRequestToJSONTyped(json, false);
}

export function BotifyCrawlImportRequestToJSONTyped(value?: BotifyCrawlImportRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collection': value['collection'],
        'description': value['description'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(FilterToJSON)),
        'headline': value['headline'],
        'request_embeddings': value['requestEmbeddings'] == null ? undefined : Array.from(value['requestEmbeddings'] as Set<any>),
        'text': value['text'],
        'types': value['types'] == null ? undefined : Array.from(value['types'] as Set<any>),
        'url': value['url'],
    };
}

