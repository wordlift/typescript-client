/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ClassificationRequest,
  ClassificationResponse,
} from '../models';
import {
    ClassificationRequestFromJSON,
    ClassificationRequestToJSON,
    ClassificationResponseFromJSON,
    ClassificationResponseToJSON,
} from '../models';

export interface ClassifyUsingPostRequest {
    body: ClassificationRequest;
    lang?: string;
    multiClass?: boolean;
}

/**
 * 
 */
export class ClassificationsApi extends runtime.BaseAPI {

    /**
     * Classify the text to provided categories
     * Create
     */
    async classifyUsingPostRaw(requestParameters: ClassifyUsingPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClassificationResponse>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling classifyUsingPost.');
        }

        const queryParameters: any = {};

        if (requestParameters.lang !== undefined) {
            queryParameters['lang'] = requestParameters.lang;
        }

        if (requestParameters.multiClass !== undefined) {
            queryParameters['multi_class'] = requestParameters.multiClass;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/classification/classify`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ClassificationRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClassificationResponseFromJSON(jsonValue));
    }

    /**
     * Classify the text to provided categories
     * Create
     */
    async classifyUsingPost(requestParameters: ClassifyUsingPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClassificationResponse> {
        const response = await this.classifyUsingPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
