/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateEmbeddingsInput,
} from '../models';
import {
    CreateEmbeddingsInputFromJSON,
    CreateEmbeddingsInputToJSON,
} from '../models';

export interface CreateEmbeddingsRequest {
    createEmbeddingsInput: CreateEmbeddingsInput;
}

/**
 * 
 */
export class EmbeddingsApi extends runtime.BaseAPI {

    /**
     * Create Embeddings
     * Create Embeddings
     */
    async createEmbeddingsRaw(requestParameters: CreateEmbeddingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.createEmbeddingsInput === null || requestParameters.createEmbeddingsInput === undefined) {
            throw new runtime.RequiredError('createEmbeddingsInput','Required parameter requestParameters.createEmbeddingsInput was null or undefined when calling createEmbeddings.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/api/embeddings`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateEmbeddingsInputToJSON(requestParameters.createEmbeddingsInput),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create Embeddings
     * Create Embeddings
     */
    async createEmbeddings(requestParameters: CreateEmbeddingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.createEmbeddingsRaw(requestParameters, initOverrides);
    }

}
