/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebpageProperties
 */
export interface WebpageProperties {
    /**
     * 
     * @type {Set<string>}
     * @memberof WebpageProperties
     */
    entities: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof WebpageProperties
     */
    iri: string;
    /**
     * 
     * @type {string}
     * @memberof WebpageProperties
     */
    query?: string;
    /**
     * 
     * @type {string}
     * @memberof WebpageProperties
     */
    url: string;
}

/**
 * Check if a given object implements the WebpageProperties interface.
 */
export function instanceOfWebpageProperties(value: object): value is WebpageProperties {
    if (!('entities' in value) || value['entities'] === undefined) return false;
    if (!('iri' in value) || value['iri'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function WebpagePropertiesFromJSON(json: any): WebpageProperties {
    return WebpagePropertiesFromJSONTyped(json, false);
}

export function WebpagePropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebpageProperties {
    if (json == null) {
        return json;
    }
    return {
        
        'entities': new Set(json['entities']),
        'iri': json['iri'],
        'query': json['query'] == null ? undefined : json['query'],
        'url': json['url'],
    };
}

export function WebpagePropertiesToJSON(json: any): WebpageProperties {
    return WebpagePropertiesToJSONTyped(json, false);
}

export function WebpagePropertiesToJSONTyped(value?: WebpageProperties | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'entities': Array.from(value['entities'] as Set<any>),
        'iri': value['iri'],
        'query': value['query'],
        'url': value['url'],
    };
}

