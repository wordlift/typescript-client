/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IncludeExclude
 */
export interface IncludeExclude {
    /**
     * Account unique identifier
     * @type {number}
     * @memberof IncludeExclude
     */
    readonly accountId: number;
    /**
     * A flag which determines whether the URL is `INCLUDE` or `EXCLUDE`.
     * @type {string}
     * @memberof IncludeExclude
     */
    flag: IncludeExcludeFlagEnum;
    /**
     * Unique identifier
     * @type {number}
     * @memberof IncludeExclude
     */
    readonly id?: number;
    /**
     * The URL
     * @type {string}
     * @memberof IncludeExclude
     */
    url: string;
}


/**
 * @export
 */
export const IncludeExcludeFlagEnum = {
    Include: 'INCLUDE',
    Exclude: 'EXCLUDE'
} as const;
export type IncludeExcludeFlagEnum = typeof IncludeExcludeFlagEnum[keyof typeof IncludeExcludeFlagEnum];


/**
 * Check if a given object implements the IncludeExclude interface.
 */
export function instanceOfIncludeExclude(value: object): value is IncludeExclude {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('flag' in value) || value['flag'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function IncludeExcludeFromJSON(json: any): IncludeExclude {
    return IncludeExcludeFromJSONTyped(json, false);
}

export function IncludeExcludeFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncludeExclude {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['account_id'],
        'flag': json['flag'],
        'id': json['id'] == null ? undefined : json['id'],
        'url': json['url'],
    };
}

export function IncludeExcludeToJSON(json: any): IncludeExclude {
    return IncludeExcludeToJSONTyped(json, false);
}

export function IncludeExcludeToJSONTyped(value?: Omit<IncludeExclude, 'account_id'|'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'flag': value['flag'],
        'url': value['url'],
    };
}

