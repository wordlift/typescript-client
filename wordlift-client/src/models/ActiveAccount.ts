/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DiagnosticPlugin } from './DiagnosticPlugin';
import {
    DiagnosticPluginFromJSON,
    DiagnosticPluginFromJSONTyped,
    DiagnosticPluginToJSON,
    DiagnosticPluginToJSONTyped,
} from './DiagnosticPlugin';
import type { AccountSubscription } from './AccountSubscription';
import {
    AccountSubscriptionFromJSON,
    AccountSubscriptionFromJSONTyped,
    AccountSubscriptionToJSON,
    AccountSubscriptionToJSONTyped,
} from './AccountSubscription';

/**
 * An array of objects.
 * @export
 * @interface ActiveAccount
 */
export interface ActiveAccount {
    /**
     * The collection hosting the Knowledge Graph.
     * @type {string}
     * @memberof ActiveAccount
     */
    collection?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    country?: string;
    /**
     * 
     * @type {Array<DiagnosticPlugin>}
     * @memberof ActiveAccount
     */
    diagnosticPlugins?: Array<DiagnosticPlugin>;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    domainUri?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    googleSearchConsoleSiteUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ActiveAccount
     */
    isWordpress?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    ngDatasetId?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    packageType?: string;
    /**
     * 
     * @type {AccountSubscription}
     * @memberof ActiveAccount
     */
    subscription?: AccountSubscription;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    subscriptionId?: number;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    totalEntities?: number;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    totalEntitiesWithSchemaUrl?: number;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    wpAdmin?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    wpIncludeExcludeDefault?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    wpJson?: string;
}

/**
 * Check if a given object implements the ActiveAccount interface.
 */
export function instanceOfActiveAccount(value: object): value is ActiveAccount {
    return true;
}

export function ActiveAccountFromJSON(json: any): ActiveAccount {
    return ActiveAccountFromJSONTyped(json, false);
}

export function ActiveAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'collection': json['collection'] == null ? undefined : json['collection'],
        'country': json['country'] == null ? undefined : json['country'],
        'diagnosticPlugins': json['diagnostic_plugins'] == null ? undefined : ((json['diagnostic_plugins'] as Array<any>).map(DiagnosticPluginFromJSON)),
        'domainUri': json['domain_uri'] == null ? undefined : json['domain_uri'],
        'googleSearchConsoleSiteUrl': json['google_search_console_site_url'] == null ? undefined : json['google_search_console_site_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'isWordpress': json['is_wordpress'] == null ? undefined : json['is_wordpress'],
        'key': json['key'] == null ? undefined : json['key'],
        'language': json['language'] == null ? undefined : json['language'],
        'ngDatasetId': json['ng_dataset_id'] == null ? undefined : json['ng_dataset_id'],
        'packageType': json['package_type'] == null ? undefined : json['package_type'],
        'subscription': json['subscription'] == null ? undefined : AccountSubscriptionFromJSON(json['subscription']),
        'subscriptionId': json['subscription_id'] == null ? undefined : json['subscription_id'],
        'totalEntities': json['total_entities'] == null ? undefined : json['total_entities'],
        'totalEntitiesWithSchemaUrl': json['total_entities_with_schema_url'] == null ? undefined : json['total_entities_with_schema_url'],
        'url': json['url'] == null ? undefined : json['url'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'wpAdmin': json['wp_admin'] == null ? undefined : json['wp_admin'],
        'wpIncludeExcludeDefault': json['wp_include_exclude_default'] == null ? undefined : json['wp_include_exclude_default'],
        'wpJson': json['wp_json'] == null ? undefined : json['wp_json'],
    };
}

export function ActiveAccountToJSON(json: any): ActiveAccount {
    return ActiveAccountToJSONTyped(json, false);
}

export function ActiveAccountToJSONTyped(value?: ActiveAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collection': value['collection'],
        'country': value['country'],
        'diagnostic_plugins': value['diagnosticPlugins'] == null ? undefined : ((value['diagnosticPlugins'] as Array<any>).map(DiagnosticPluginToJSON)),
        'domain_uri': value['domainUri'],
        'google_search_console_site_url': value['googleSearchConsoleSiteUrl'],
        'id': value['id'],
        'is_wordpress': value['isWordpress'],
        'key': value['key'],
        'language': value['language'],
        'ng_dataset_id': value['ngDatasetId'],
        'package_type': value['packageType'],
        'subscription': AccountSubscriptionToJSON(value['subscription']),
        'subscription_id': value['subscriptionId'],
        'total_entities': value['totalEntities'],
        'total_entities_with_schema_url': value['totalEntitiesWithSchemaUrl'],
        'url': value['url'],
        'user_id': value['userId'],
        'wp_admin': value['wpAdmin'],
        'wp_include_exclude_default': value['wpIncludeExcludeDefault'],
        'wp_json': value['wpJson'],
    };
}

