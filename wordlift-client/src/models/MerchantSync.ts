/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A Merchant products data synchronization.
 * @export
 * @interface MerchantSync
 */
export interface MerchantSync {
    /**
     * The create date-time.
     * @type {Date}
     * @memberof MerchantSync
     */
    readonly createdAt?: Date;
    /**
     * Error that caused the synchronization to fail.
     * @type {string}
     * @memberof MerchantSync
     */
    readonly errorReason?: string;
    /**
     * Whether the sync encountered errors.
     * @type {boolean}
     * @memberof MerchantSync
     */
    readonly hasErrors?: boolean;
    /**
     * The unique id.
     * @type {number}
     * @memberof MerchantSync
     */
    readonly id?: number;
    /**
     * The parent Merchant id.
     * @type {number}
     * @memberof MerchantSync
     */
    readonly merchantId: number;
    /**
     * The last modified date-time.
     * @type {Date}
     * @memberof MerchantSync
     */
    readonly modifiedAt?: Date;
    /**
     * The overall amount of products available on KG after syncing.
     * @type {number}
     * @memberof MerchantSync
     */
    readonly overallProductsInKg?: number;
    /**
     * The number of created products
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsCreated?: number;
    /**
     * The number of deleted products
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsDeleted?: number;
    /**
     * The number of errored products
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsErrored?: number;
    /**
     * The number of skipped products
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsSkipped?: number;
    /**
     * The total number of processed products, including the skipped and errored.
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsTotal?: number;
    /**
     * The number of products that haven't changed and therefore haven't been synced again
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsUnchanged?: number;
    /**
     * The number of update products
     * @type {number}
     * @memberof MerchantSync
     */
    readonly productsUpdated?: number;
    /**
     * The started date-time.
     * @type {Date}
     * @memberof MerchantSync
     */
    readonly startedAt?: Date;
    /**
     * The stopped date-time.
     * @type {Date}
     * @memberof MerchantSync
     */
    readonly stoppedAt?: Date;
    /**
     * The number of products synced by this process available in KG.
     * @type {number}
     * @memberof MerchantSync
     */
    readonly syncedProductsInKg?: number;
    /**
     * 
     * @type {number}
     * @memberof MerchantSync
     */
    syncedProductsInKgBeforeCleanup?: number;
}

/**
 * Check if a given object implements the MerchantSync interface.
 */
export function instanceOfMerchantSync(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "merchantId" in value;

    return isInstance;
}

export function MerchantSyncFromJSON(json: any): MerchantSync {
    return MerchantSyncFromJSONTyped(json, false);
}

export function MerchantSyncFromJSONTyped(json: any, ignoreDiscriminator: boolean): MerchantSync {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'errorReason': !exists(json, 'error_reason') ? undefined : json['error_reason'],
        'hasErrors': !exists(json, 'has_errors') ? undefined : json['has_errors'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'merchantId': json['merchant_id'],
        'modifiedAt': !exists(json, 'modified_at') ? undefined : (new Date(json['modified_at'])),
        'overallProductsInKg': !exists(json, 'overall_products_in_kg') ? undefined : json['overall_products_in_kg'],
        'productsCreated': !exists(json, 'products_created') ? undefined : json['products_created'],
        'productsDeleted': !exists(json, 'products_deleted') ? undefined : json['products_deleted'],
        'productsErrored': !exists(json, 'products_errored') ? undefined : json['products_errored'],
        'productsSkipped': !exists(json, 'products_skipped') ? undefined : json['products_skipped'],
        'productsTotal': !exists(json, 'products_total') ? undefined : json['products_total'],
        'productsUnchanged': !exists(json, 'products_unchanged') ? undefined : json['products_unchanged'],
        'productsUpdated': !exists(json, 'products_updated') ? undefined : json['products_updated'],
        'startedAt': !exists(json, 'started_at') ? undefined : (new Date(json['started_at'])),
        'stoppedAt': !exists(json, 'stopped_at') ? undefined : (new Date(json['stopped_at'])),
        'syncedProductsInKg': !exists(json, 'synced_products_in_kg') ? undefined : json['synced_products_in_kg'],
        'syncedProductsInKgBeforeCleanup': !exists(json, 'synced_products_in_kg_before_cleanup') ? undefined : json['synced_products_in_kg_before_cleanup'],
    };
}

export function MerchantSyncToJSON(value?: MerchantSync | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'synced_products_in_kg_before_cleanup': value.syncedProductsInKgBeforeCleanup,
    };
}

