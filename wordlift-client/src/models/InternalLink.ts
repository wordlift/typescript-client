/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InternalLinkDestination } from './InternalLinkDestination';
import {
    InternalLinkDestinationFromJSON,
    InternalLinkDestinationFromJSONTyped,
    InternalLinkDestinationToJSON,
    InternalLinkDestinationToJSONTyped,
} from './InternalLinkDestination';
import type { InternalLinkSource } from './InternalLinkSource';
import {
    InternalLinkSourceFromJSON,
    InternalLinkSourceFromJSONTyped,
    InternalLinkSourceToJSON,
    InternalLinkSourceToJSONTyped,
} from './InternalLinkSource';

/**
 * 
 * @export
 * @interface InternalLink
 */
export interface InternalLink {
    /**
     * InternalLink destinations configuration.
     * @type {Array<InternalLinkDestination>}
     * @memberof InternalLink
     */
    destinations: Array<InternalLinkDestination>;
    /**
     * 
     * @type {InternalLinkSource}
     * @memberof InternalLink
     */
    source: InternalLinkSource;
}

/**
 * Check if a given object implements the InternalLink interface.
 */
export function instanceOfInternalLink(value: object): value is InternalLink {
    if (!('destinations' in value) || value['destinations'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function InternalLinkFromJSON(json: any): InternalLink {
    return InternalLinkFromJSONTyped(json, false);
}

export function InternalLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalLink {
    if (json == null) {
        return json;
    }
    return {
        
        'destinations': ((json['destinations'] as Array<any>).map(InternalLinkDestinationFromJSON)),
        'source': InternalLinkSourceFromJSON(json['source']),
    };
}

export function InternalLinkToJSON(json: any): InternalLink {
    return InternalLinkToJSONTyped(json, false);
}

export function InternalLinkToJSONTyped(value?: InternalLink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'destinations': ((value['destinations'] as Array<any>).map(InternalLinkDestinationToJSON)),
        'source': InternalLinkSourceToJSON(value['source']),
    };
}

