/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebpageProperties
 */
export interface WebpageProperties {
    /**
     * 
     * @type {Set<string>}
     * @memberof WebpageProperties
     */
    entities: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof WebpageProperties
     */
    iri: string;
    /**
     * 
     * @type {string}
     * @memberof WebpageProperties
     */
    query?: string;
    /**
     * 
     * @type {string}
     * @memberof WebpageProperties
     */
    url: string;
}

/**
 * Check if a given object implements the WebpageProperties interface.
 */
export function instanceOfWebpageProperties(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "entities" in value;
    isInstance = isInstance && "iri" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function WebpagePropertiesFromJSON(json: any): WebpageProperties {
    return WebpagePropertiesFromJSONTyped(json, false);
}

export function WebpagePropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebpageProperties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entities': json['entities'],
        'iri': json['iri'],
        'query': !exists(json, 'query') ? undefined : json['query'],
        'url': json['url'],
    };
}

export function WebpagePropertiesToJSON(value?: WebpageProperties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entities': Array.from(value.entities as Set<any>),
        'iri': value.iri,
        'query': value.query,
        'url': value.url,
    };
}

