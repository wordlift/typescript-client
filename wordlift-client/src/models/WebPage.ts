/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebPage
 */
export interface WebPage {
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    _abstract?: string;
    /**
     * 
     * @type {Date}
     * @memberof WebPage
     */
    datePublished?: Date;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    headline?: string;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    markdown?: string;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    text?: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof WebPage
     */
    types?: Set<string>;
    /**
     * 
     * @type {string}
     * @memberof WebPage
     */
    url?: string;
}

/**
 * Check if a given object implements the WebPage interface.
 */
export function instanceOfWebPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebPageFromJSON(json: any): WebPage {
    return WebPageFromJSONTyped(json, false);
}

export function WebPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_abstract': !exists(json, 'abstract') ? undefined : json['abstract'],
        'datePublished': !exists(json, 'date_published') ? undefined : (new Date(json['date_published'])),
        'headline': !exists(json, 'headline') ? undefined : json['headline'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'markdown': !exists(json, 'markdown') ? undefined : json['markdown'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'types': !exists(json, 'types') ? undefined : json['types'],
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function WebPageToJSON(value?: WebPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'abstract': value._abstract,
        'date_published': value.datePublished === undefined ? undefined : (value.datePublished.toISOString().substr(0,10)),
        'headline': value.headline,
        'image': value.image,
        'markdown': value.markdown,
        'text': value.text,
        'types': value.types === undefined ? undefined : Array.from(value.types as Set<any>),
        'url': value.url,
    };
}

