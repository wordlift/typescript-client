/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebAsync
 */
export interface WebAsync {
    /**
     * 
     * @type {string}
     * @memberof WebAsync
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof WebAsync
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof WebAsync
     */
    completed?: Date;
    /**
     * 
     * @type {Date}
     * @memberof WebAsync
     */
    delivered?: Date;
    /**
     * 
     * @type {string}
     * @memberof WebAsync
     */
    method?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAsync
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAsync
     */
    callback?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAsync
     */
    remoteAddress?: string;
}

/**
 * Check if a given object implements the WebAsync interface.
 */
export function instanceOfWebAsync(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebAsyncFromJSON(json: any): WebAsync {
    return WebAsyncFromJSONTyped(json, false);
}

export function WebAsyncFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebAsync {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'completed': !exists(json, 'completed') ? undefined : (new Date(json['completed'])),
        'delivered': !exists(json, 'delivered') ? undefined : (new Date(json['delivered'])),
        'method': !exists(json, 'method') ? undefined : json['method'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'callback': !exists(json, 'callback') ? undefined : json['callback'],
        'remoteAddress': !exists(json, 'remoteAddress') ? undefined : json['remoteAddress'],
    };
}

export function WebAsyncToJSON(value?: WebAsync | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'completed': value.completed === undefined ? undefined : (value.completed.toISOString()),
        'delivered': value.delivered === undefined ? undefined : (value.delivered.toISOString()),
        'method': value.method,
        'url': value.url,
        'callback': value.callback,
        'remoteAddress': value.remoteAddress,
    };
}

