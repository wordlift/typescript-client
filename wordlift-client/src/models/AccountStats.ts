/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The Account statistics
 * @export
 * @interface AccountStats
 */
export interface AccountStats {
    /**
     * The number of entities.
     * @type {number}
     * @memberof AccountStats
     */
    entities: number;
    /**
     * The number of entities with URL.
     * @type {number}
     * @memberof AccountStats
     */
    entitiesWithUrl: number;
    /**
     * The number of product groups in the KG.
     * @type {number}
     * @memberof AccountStats
     */
    productGroups: number;
    /**
     * The number of products in the KG.
     * @type {number}
     * @memberof AccountStats
     */
    products: number;
}

/**
 * Check if a given object implements the AccountStats interface.
 */
export function instanceOfAccountStats(value: object): value is AccountStats {
    if (!('entities' in value) || value['entities'] === undefined) return false;
    if (!('entitiesWithUrl' in value) || value['entitiesWithUrl'] === undefined) return false;
    if (!('productGroups' in value) || value['productGroups'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function AccountStatsFromJSON(json: any): AccountStats {
    return AccountStatsFromJSONTyped(json, false);
}

export function AccountStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountStats {
    if (json == null) {
        return json;
    }
    return {
        
        'entities': json['entities'],
        'entitiesWithUrl': json['entities_with_url'],
        'productGroups': json['product_groups'],
        'products': json['products'],
    };
}

export function AccountStatsToJSON(json: any): AccountStats {
    return AccountStatsToJSONTyped(json, false);
}

export function AccountStatsToJSONTyped(value?: AccountStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'entities': value['entities'],
        'entities_with_url': value['entitiesWithUrl'],
        'product_groups': value['productGroups'],
        'products': value['products'],
    };
}

