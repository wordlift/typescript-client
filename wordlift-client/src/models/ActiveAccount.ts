/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountSubscription } from './AccountSubscription';
import {
    AccountSubscriptionFromJSON,
    AccountSubscriptionFromJSONTyped,
    AccountSubscriptionToJSON,
} from './AccountSubscription';
import type { DiagnosticPlugin } from './DiagnosticPlugin';
import {
    DiagnosticPluginFromJSON,
    DiagnosticPluginFromJSONTyped,
    DiagnosticPluginToJSON,
} from './DiagnosticPlugin';

/**
 * An array of objects.
 * @export
 * @interface ActiveAccount
 */
export interface ActiveAccount {
    /**
     * The collection hosting the Knowledge Graph.
     * @type {string}
     * @memberof ActiveAccount
     */
    collection?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    country?: string;
    /**
     * 
     * @type {Array<DiagnosticPlugin>}
     * @memberof ActiveAccount
     */
    diagnosticPlugins?: Array<DiagnosticPlugin>;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    domainUri?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    googleSearchConsoleSiteUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ActiveAccount
     */
    isWordpress?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    ngDatasetId?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    packageType?: string;
    /**
     * 
     * @type {AccountSubscription}
     * @memberof ActiveAccount
     */
    subscription?: AccountSubscription;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    subscriptionId?: number;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    totalEntities?: number;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    totalEntitiesWithSchemaUrl?: number;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof ActiveAccount
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    wpAdmin?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    wpIncludeExcludeDefault?: string;
    /**
     * 
     * @type {string}
     * @memberof ActiveAccount
     */
    wpJson?: string;
}

/**
 * Check if a given object implements the ActiveAccount interface.
 */
export function instanceOfActiveAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActiveAccountFromJSON(json: any): ActiveAccount {
    return ActiveAccountFromJSONTyped(json, false);
}

export function ActiveAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collection': !exists(json, 'collection') ? undefined : json['collection'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'diagnosticPlugins': !exists(json, 'diagnostic_plugins') ? undefined : ((json['diagnostic_plugins'] as Array<any>).map(DiagnosticPluginFromJSON)),
        'domainUri': !exists(json, 'domain_uri') ? undefined : json['domain_uri'],
        'googleSearchConsoleSiteUrl': !exists(json, 'google_search_console_site_url') ? undefined : json['google_search_console_site_url'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isWordpress': !exists(json, 'is_wordpress') ? undefined : json['is_wordpress'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'language': !exists(json, 'language') ? undefined : json['language'],
        'ngDatasetId': !exists(json, 'ng_dataset_id') ? undefined : json['ng_dataset_id'],
        'packageType': !exists(json, 'package_type') ? undefined : json['package_type'],
        'subscription': !exists(json, 'subscription') ? undefined : AccountSubscriptionFromJSON(json['subscription']),
        'subscriptionId': !exists(json, 'subscription_id') ? undefined : json['subscription_id'],
        'totalEntities': !exists(json, 'total_entities') ? undefined : json['total_entities'],
        'totalEntitiesWithSchemaUrl': !exists(json, 'total_entities_with_schema_url') ? undefined : json['total_entities_with_schema_url'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'wpAdmin': !exists(json, 'wp_admin') ? undefined : json['wp_admin'],
        'wpIncludeExcludeDefault': !exists(json, 'wp_include_exclude_default') ? undefined : json['wp_include_exclude_default'],
        'wpJson': !exists(json, 'wp_json') ? undefined : json['wp_json'],
    };
}

export function ActiveAccountToJSON(value?: ActiveAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collection': value.collection,
        'country': value.country,
        'diagnostic_plugins': value.diagnosticPlugins === undefined ? undefined : ((value.diagnosticPlugins as Array<any>).map(DiagnosticPluginToJSON)),
        'domain_uri': value.domainUri,
        'google_search_console_site_url': value.googleSearchConsoleSiteUrl,
        'id': value.id,
        'is_wordpress': value.isWordpress,
        'key': value.key,
        'language': value.language,
        'ng_dataset_id': value.ngDatasetId,
        'package_type': value.packageType,
        'subscription': AccountSubscriptionToJSON(value.subscription),
        'subscription_id': value.subscriptionId,
        'total_entities': value.totalEntities,
        'total_entities_with_schema_url': value.totalEntitiesWithSchemaUrl,
        'url': value.url,
        'user_id': value.userId,
        'wp_admin': value.wpAdmin,
        'wp_include_exclude_default': value.wpIncludeExcludeDefault,
        'wp_json': value.wpJson,
    };
}

