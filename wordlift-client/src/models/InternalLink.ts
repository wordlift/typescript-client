/* tslint:disable */
/* eslint-disable */
/**
 * Embeddings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InternalLinkDestination } from './InternalLinkDestination';
import {
    InternalLinkDestinationFromJSON,
    InternalLinkDestinationFromJSONTyped,
    InternalLinkDestinationToJSON,
} from './InternalLinkDestination';
import type { InternalLinkSource } from './InternalLinkSource';
import {
    InternalLinkSourceFromJSON,
    InternalLinkSourceFromJSONTyped,
    InternalLinkSourceToJSON,
} from './InternalLinkSource';

/**
 * 
 * @export
 * @interface InternalLink
 */
export interface InternalLink {
    /**
     * InternalLink destinations configuration.
     * @type {Array<InternalLinkDestination>}
     * @memberof InternalLink
     */
    destinations: Array<InternalLinkDestination>;
    /**
     * 
     * @type {InternalLinkSource}
     * @memberof InternalLink
     */
    source: InternalLinkSource;
}

/**
 * Check if a given object implements the InternalLink interface.
 */
export function instanceOfInternalLink(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "destinations" in value;
    isInstance = isInstance && "source" in value;

    return isInstance;
}

export function InternalLinkFromJSON(json: any): InternalLink {
    return InternalLinkFromJSONTyped(json, false);
}

export function InternalLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalLink {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'destinations': ((json['destinations'] as Array<any>).map(InternalLinkDestinationFromJSON)),
        'source': InternalLinkSourceFromJSON(json['source']),
    };
}

export function InternalLinkToJSON(value?: InternalLink | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'destinations': ((value.destinations as Array<any>).map(InternalLinkDestinationToJSON)),
        'source': InternalLinkSourceToJSON(value.source),
    };
}

